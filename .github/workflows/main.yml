# Main Pipeline CI/CD
name: CI/CD Pipeline

on:
  push:
    # Set the branches to main and develop
    branches: [ main, develop ]
  pull_request:
    # Set the branches to main and develop
    branches: [ main, develop ]

jobs:
  test-and-build:
    # Set the runner to ubuntu-latest
    runs-on: ubuntu-latest
    defaults:
      run:
        # Set the working directory to the backend folder
        working-directory: ./backend

    strategy:
      matrix:
        # Set the node version to 18.x
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm run test
      env:
        DATABASE_URL: "sqlite:./test.db"

    - name: Build
      run: npm run build

    - name: Run e2e tests
      run: npm run test:e2e

  # Cache dependencies for future executions
  
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm # where to cache the node modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} 
        # create a key from the os and the content of the package-lock.json file
        restore-keys: |
          ${{ runner.os }}-node- 
        #always restore the cache if the key is not found